package com.realmcoder.newrealmminecraft.api.itemstack;

import java.util.Comparator;
import java.util.List;

import net.minecraft.block.Block;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraftforge.fluids.Fluid;
import net.minecraftforge.fluids.FluidStack;

import com.realmcoder.newrealmminecraft.helper.FluidHelper;

/**
 * Created by RealmCoder on 8/5/14.
 * Contributors: Pahimar (looking for things that I never would have)
 */
public class OmniStack {
    
    private final Object stack;
    
    public static Comparator<OmniStack> comaparator = new Comparator<OmniStack>()
    {

        /**
         * @param omniStack1, omniStack2
         * @return 0 --> Are Equal, Integer.MIN_VALUE --> incomparable on side of omniStack1, Integer.MIN_VALUE -->
         * incomparable on side of omniStack2, any other value shows the comparisons of the two stacks
         */
        @Override
        public int compare(OmniStack omniStack1, OmniStack omniStack2)
        {
            if(omniStack1.stack instanceof OreStack)
            {
                if(omniStack2.stack instanceof OreStack)
                {
                    return OreStack.comparator.compare((OreStack)omniStack1.stack, (OreStack)omniStack2.stack);
                }
                else
                {
                    return Integer.MIN_VALUE;
                }
            }
            else if(omniStack1.stack instanceof FluidStack)
            {
                if(omniStack2.stack instanceof FluidStack)
                {
                    return FluidHelper.comparator.compare((FluidStack)omniStack1.stack, (FluidStack)omniStack2.stack);
                }
                else
                {
                    return Integer.MIN_VALUE;
                }
            }
            return 0;
        }
    };
    
    private int stackSize;
    
    /**
     * Creates an empty stack
     */
    public OmniStack()
    {
        stackSize = 1;
        stack = null;
    }
    
    public OmniStack(Object obj)
    {
        if(obj instanceof Item)
        {
            obj = new ItemStack((Item) obj);
        }
        if(obj instanceof Block)
        {
            obj = new ItemStack((Block) obj);
        }
        if(obj instanceof Fluid)
        {
            obj = new FluidStack((Fluid) obj, 1000);
        }
        if(obj instanceof ItemStack)
        {
            obj = new OreStack((ItemStack) obj);
        }
        if(obj instanceof List)
        {
            List<?> list = (List<?>)obj;
            
            obj = OreStack.getOreStackFromList(list);
        }
        
        if(obj instanceof OreStack)
        {
            OreStack oreStack = (OreStack) obj;
            
            stackSize = oreStack.getStackSize();
            oreStack.setStackSize(1);
            stack = oreStack;
        }
        else if(obj instanceof FluidStack)
        {
            FluidStack fluidStack = ((FluidStack) obj).copy();
            
            stackSize = fluidStack.amount;
            fluidStack.amount = 1;
            stack = fluidStack;
        }
        else if(obj instanceof OmniStack)
        {
            OmniStack omniStack = (OmniStack) obj;
            
            if (omniStack.getOmniStack() != null)
            {
                this.stackSize = omniStack.stackSize;
                this.stack = omniStack.stack;
            }
            else
            {
                stackSize = -1;
                stack = null;
            }
        }
        else
        {
            stackSize = -1;
            stack = null;
        }
    }
    
    public OmniStack(Object obj, int amount)
    {
        if(obj instanceof Item)
        {
            obj = new ItemStack((Item) obj);
        }
        if(obj instanceof Block)
        {
            obj = new ItemStack((Block) obj);
        }
        if(obj instanceof Fluid)
        {
            obj = new FluidStack((Fluid) obj, 1000);
        }
        if(obj instanceof ItemStack)
        {
            obj = new OreStack((ItemStack) obj);
        }
        if(obj instanceof List)
        {
            List<?> list = (List<?>)obj;
            
            obj = OreStack.getOreStackFromList(list);
        }
        
        if(obj instanceof OreStack)
        {
            OreStack oreStack = (OreStack) obj;
            
            stackSize = amount;
            oreStack.setStackSize(1);
            stack = oreStack;
        }
        else if(obj instanceof FluidStack)
        {
            FluidStack fluidStack = ((FluidStack) obj).copy();
            
            stackSize = amount;
            fluidStack.amount = 1;
            stack = fluidStack;
        }
        else if(obj instanceof OmniStack)
        {
            OmniStack omniStack = (OmniStack) obj;
            
            if (omniStack.getOmniStack() != null)
            {
                this.stackSize = amount;
                this.stack = omniStack.stack;
            }
            else
            {
                stackSize = -1;
                stack = null;
            }
        }
        else
        {
            stackSize = -1;
            stack = null;
        }
    }

    public Object getOmniStack()
    {
        return stack;
    }
    
    public int getStackAmount()
    {
        return stackSize;
    }
    
    public void setStackAmount(int amount)
    {
        stackSize = amount;
    }
    
}
